name: Generate Changelog

on:
  workflow_dispatch:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

env:
  GIT_SSH_COMMAND: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      previous-version: ${{ steps.sem-ver.outputs.current }}
      current-version: ${{ steps.sem-ver.outputs.previous }}
      changelog-file: ${{ steps.changelog.outputs.changelog-file }}
    steps:
      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.ADMIN_PERSONAL_ACCESS_TOKEN }}
      - uses: subosito/flutter-action@v1.4.0
      - run: flutter pub get
      - name: Generate Semantic Versions
        id: sem-ver
        run: |
          echo "::set-output name=current::$(echo $(flutter pub run izakaya pub version -b ${GITHUB_RUN_NUMBER}))"
          echo "::set-output name=previous::$(echo $(flutter pub run izakaya pub version -b $((${GITHUB_RUN_NUMBER}-1))))"
      - name: Generate Changelog
        id: changelog
        run: |
          mkdir -p docs/changelogs
          flutter pub run izakaya pub changelog ${{ steps.sem-ver.outputs.current }} HEAD ${{ steps.sem-ver.outputs.previous }} > docs/changelogs/${{ steps.sem-ver.outputs.current }}.md
          echo "::set-output name=changelog-file::$(echo "docs/changelogs/${{ steps.sem-ver.outputs.current }}.md")"
      - run: echo "$(cat ${{ steps.changelog.outputs.changelog-file }})"
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Prepare ${{ steps.sem-ver.outputs.current }}
  finalize:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - run: echo "$(cat ${{ steps.changelog.outputs.changelog-file }})"
      - uses: actions/checkout@v2
      - name: Create Release
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{ github.token }}
          script: |
            await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ needs.prepare.outputs.current-version }}",
              target_commitish: context.sha,
              body: "$(cat ${{ needs.prepare.outputs.changelog-file }})",
            })
